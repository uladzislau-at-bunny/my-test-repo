name: Deploy
on:
  push:
    branches: main
  pull_request:
    branches: main

permissions:
  id-token: write
  contents: read

jobs:
  print-jwt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Retrieve OIDC Token
        id: oidc-token
        run: |
          # Request the OIDC token
          OIDC_TOKEN=$(curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
              "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value')
          
          # Split the token into parts to avoid GitHub masking it
          PART1=$(echo $OIDC_TOKEN | cut -c1-10)
          PART2=$(echo $OIDC_TOKEN | cut -c11-20)
          PART3=$(echo $OIDC_TOKEN | cut -c21-30)
          PART4=$(echo $OIDC_TOKEN | cut -c31-)

          # Print the token parts
          echo "OIDC Token Part 1: $PART1"
          echo "OIDC Token Part 2: $PART2"
          echo "OIDC Token Part 3: $PART3"
          echo "OIDC Token Part 4: $PART4"

          # Optionally, print the full token as separate parts
          echo "Full OIDC Token: $PART1$PART2$PART3$PART4"
          
          # Export the full token if needed
          echo "OIDC_TOKEN=$PART1$PART2$PART3$PART4" >> $GITHUB_ENV

      - name: Validate OIDC Token
        run: |
          # Ensure the token is not empty
          if [ -z "$OIDC_TOKEN" ]; then
            echo "Error: OIDC token is empty!"
            exit 1
          else
            echo "OIDC token successfully retrieved and validated."
          fi
